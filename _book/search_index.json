[["materiales-y-métodos.html", "Materiales y métodos", " Materiales y métodos Se analizaron tres bases de datos tipo phyloseq bajo el enfoque de las redes multicapa. La primera de estas contenía datos de la microbiota del escarabajo Lema daturaphila y de la microbiota de la planta de la cual este se alimenta durante su estadio larval, la solanácea Datura inoxia [16]. También se analizaron dos bases de datos procedentes del paquete seqtime [17], correspondientes a series temporales de la microbiota de dos sujetos; el primero de los cuales (sujeto A) realizó un viaje entre los días 71 y 122 durante los cuales cambió su régimen alimenticio, sufriendo en consecuencia dos episodios de diarrea entre los días 80 a 85 y 104 a 113. Por su parte, el sujeto B experimentó una intoxicación por Salmonella entre los días 151 y 159 [18]. Para la realización de este trabajo se utilizó la versión 4.1.0 (2021-05-18) de R. Se emplearon los paquetes igraph [19], phyloseq [20], SpiecEasi [21], minet [22], seqtime [17], muxViz [23], multinet [24] y corrplot [25]. Algunos de los paquetes están disponibles en CRAN y otros fueron descargados de repositorios de GitHub o del proyecto para análisis de datos genómicos Bioconductor. Paquete Uso Fuente Descarga igraph Construcción, diseño, análisis y manipulación de redes. CRAN install.packages(igraph) phyloseq Herramientas para la importación, análisis, almacenamiento y la visualización de datos de microbioma. Bioconductor if(!requireNamespace(BiocManager, quietly = TRUE)) install.packages(BiocManager); BiocManager::install(phyloseq) devtools Provee las funciones necesarias para el desarrollo de paquetes de R y descarga desde repositorios GitHub. CRAN install.packages(devtools) SpiecEasi Estimación de la covarianza de datos de abundancia e inferencia de redes ecológicas. GitHub library(devtools); install_github(zdk123/SpiecEasi) seqtime Provee datos de series temporales de microbiota, y herramientas para simular y analizar la dinámica de comunidades microbianas en el tiempo. GitHub library(devtools); install_github(hallucigenia- sparsa/seqtime) muxViz Construcción, diseño y análisis de redes multicapa. GitHub devtools::install_github(manlius/muxViz) multinet Construcción, diseño y análisis de redes multicapa. CRAN install.packages(multinet) corrplot Análisis de la correlación de matrices. CRAN install.packages(corrplot) También desarrollaré una serie de funciones en R que me permitieron analizar los datos, mismas que fueron almacenadas como un paquete de autoría propia que llamamos ml_BioNets. Dicho paquete depende de igraph [19], muxViz [23] y phyloseq [20]. Comando Uso Inputs T_collapse(T_table, O_table, names_level) Suma las abundancias absolutas de los OTUs pertenecientes a cada uno de los clados del nivel taxonómico seleccionado. Tabla de taxones, tabla de OTUs y nivel taxonómico. v_colored(g, T_table, g_tax, p_tax, g_colors) Colorea los nodos en función del nivel taxonómico seleccionado. El resultado se almacena como un atributo asociado a los nodos al que llamamos color. Red tipo igraph, tabla de taxones, nivel taxonómico superior, nivel taxonómico en el cual se infirió la red, y un carácter que contenga los colores que se asignados a cada clado. g_abundance(layer_mat, g) Colorea los nodos en función de su abundancia relativa. El resultado se almacena como un atributo asociado a los nodos al que llamamos rel_ab. Matriz de abundancias de la capa y la red de la capa. TaxGroup(g, T_table, g_tax, p_tax) Indica a qué clado, de la categoría taxonómica seleccionada, pertenece un determinado grupo de nodos. El resultado se almacena como un atributo asociado a los nodos al que llamamos Taxon. Red tipo igraph, tabla de taxones, nivel taxonómico superior, y nivel taxonómico en el cual se infirió la red. ctr(g.list, ctr_type) Colorea los nodos en un espectro de colores cálidos en función de su centralidad por grado, intermediación o cercanía. El resultado se almacena como un atributo asociado a los nodos al que llamamos hl. Objeto muxViz y tipo de centralidad seleccionada (degree, betweenness o closeness). ctr_g(g, ctr_type) Colorea los nodos en un espectro de colores cálidos en función de su centralidad por grado, intermediación o cercanía. El resultado se almacena como un atributo asociado a los nodos al que llamamos hl. Red tipo igraph y tipo de centralidad seleccionada (degree, betweenness o closeness). diff_nodes_graph(T_Collapsed, n, mat_list, g.list, alpha) Identifica diferencias significativas entre la media de las abundancias de nodos réplica en redes bipartitas. Esta función sólo considera los nodos con mayor abundancia. El resultado se almacena como un atributo asociado a los nodos al que llamamos colorA. Tabla de abundancias de todas las muestras, número a nodos a considerar, lista de matrices de abundancias de las distintas capas, y el nivel de significancia alfa. corr_clusters(clusters, method, as.corrplot) Esta función permite generar una matriz de correlaciones de la clusterización entre las capas de la red, además de un gráfico de correlaciones. Lista de objetos tipo communities para cada capa, generados con alguna de las funciones de clusterización de igraph. Los métodos de comparación de la clusterización entre capas pueden ser vi, nmi, split.join. rand o adjusted.rand. Si as.corrplot = T, la función genera un gráfico de correlaciones, de lo contrario arroja una matriz de correlaciones. Previo a la inferencia de las redes, se colapsaron los datos a nivel de género en todas las bases de datos, eliminando previamente todos aquellos no-clasificados. Para esto se construyó la función T_Collapse(), que emplea como entrada la tabla de OTUs, la tabla de taxones y el nivel taxonómico hasta el cual se desea colapsar los datos. Dicha función suma las abundancias absolutas de los OTUs pertenecientes a cada uno de los clados dentro de la categoría taxonómica seleccionada. Para inferir las redes se emplearon como datos de entrada una tabla de OTUs, que contiene las abundancias relativas de los OTUs en las muestras, y una tabla de taxones, misma que contiene la clasificación taxonómica de los OTUs. Para generar las redes multicapa previamente se separaron los datos concernientes a cada una de las capas. Para el caso de la red planta-insecto se separaron los datos correspondientes al escarabajo (huevos, intestino y excremento) y aquellos pertenecientes a la solanácea (endófitos, epifitos y semillas). Para los datos de series temporales, se separaron los períodos de salud y de enfermedad. Se aislaron tres secciones distintas de los datos del sujeto A, tomando en cuenta el periodo previo al viaje, durante el viaje y después del viaje. No fue posible construir redes únicamente a partir de los datos de los dos periodos de diarrea durante el viaje, debido a que el número de muestra era demasiado bajo como para que cualquiera de los algoritmos posteriormente utilizados pudiese inferir correlaciones entre los nodos. Para el sujeto B se tomó en cuenta el periodo previo a la infección por Salmonella, el periodo durante el cual se desarrolló la infección, y el periodo posterior a esta. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
